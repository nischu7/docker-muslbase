# Derived from Dragora
# Copyright (C) 2012-2013 Matias A. Fonzo.
# Modified by Matt Campbell
#
# This script is free software: you have unlimited permission
# to copy, distribute and modify it.

cp -a $DEPS/gcc .
cd gcc

#patch -Np0 -i ${PATCHDIR}/gcc/gcc-nofixincludes
#patch -Np1 -i ${PATCHDIR}/gcc/gcc473-dliterate-configure-var.patch
#patch -Np1 -i ${PATCHDIR}/gcc/gcc482-unwind-dliterate.patch
#patch -Np1 -i ${PATCHDIR}/gcc/gcc482-libssp-link.patch

patch -Np0 -i ${PATCHDIR}/gcc/gcc490-nofixincludes.patch
patch -Np1 -i ${PATCHDIR}/gcc/gcc490-dliterate-configure-var.patch
patch -Np1 -i ${PATCHDIR}/gcc/gcc490-unwind-dliterate.patch
patch -Np1 -i ${PATCHDIR}/gcc/gcc490-libssp-link.patch

# x86
for file in \
 gcc/config/linux.h gcc/config/i386/linux.h gcc/config/i386/linux64.h gcc/config/i386/sysv4.h ; \
do \
  sed \
   -e 's@/lib\(64\)\{0,1\}\(32\)\{0,1\}/ld@/tools&@g' \
   -e 's@lib/ld-linux.so.2@lib/ld-musl-i386.so.1@' \
   -e 's@lib64/ld-linux-x86-64.so.2@lib/ld-musl-x86_64.so.1@' \
   -e 's@/usr@/tools@g' $file > $file.new
  mv $file.new $file
  echo '
#undef STANDARD_STARTFILE_PREFIX_1
#undef STANDARD_STARTFILE_PREFIX_2
#define STANDARD_STARTFILE_PREFIX_1 "/tools/lib/"
#define STANDARD_STARTFILE_PREFIX_2 ""' >> $file
done

# MIPS
for file in gcc/config/mips/linux64.h gcc/config/mips/linux.h ; do
  sed \
      -e 's@/lib\(64\)\{0,1\}\(32\)\{0,1\}/ld@/tools&@g' \
      -e 's@lib/ld.so.1@lib/ld-musl-mips.so.1@' \
      -e 's@lib32/ld.so.1@lib/ld-musl-mips.so.1@' \
      -e 's@lib64/ld.so.1@lib/ld-musl-mips.so.1@' \
      -e 's@/usr@/tools@g' $file > $file.new
  mv $file.new $file
  echo '
#undef STANDARD_STARTFILE_PREFIX_1
#undef STANDARD_STARTFILE_PREFIX_2
#define STANDARD_STARTFILE_PREFIX_1 "/tools/lib/"
#define STANDARD_STARTFILE_PREFIX_2 ""' >> $file
done

# ARM
for file in gcc/config/arm/linux-eabi.h gcc/config/arm/linux-elf.h ; do
  sed \
      -e 's@/lib\(64\)\{0,1\}\(32\)\{0,1\}/ld@/tools&@g' \
      -e 's@lib/ld-linux.so.2@lib/ld-musl-arm.so.1@' \
      -e 's@lib/ld-linux.so.3@lib/ld-musl-arm.so.1@' \
      -e 's@/usr@/tools@g' $file > $file.new
  mv $file.new $file
  echo '
#undef STANDARD_STARTFILE_PREFIX_1
#undef STANDARD_STARTFILE_PREFIX_2
#define STANDARD_STARTFILE_PREFIX_1 "/tools/lib/"
#define STANDARD_STARTFILE_PREFIX_2 ""' >> $file
done

# GCC built-in prerequisites (if available)
cp -a $DEPS/gmp .
cp -a $DEPS/mpc .
cp -a $DEPS/mpfr .

# Avoid specific Glibc code
( cd libstdc++-v3/config/os
  mv gnu-linux gnu-linux.orig
  cp -r generic gnu-linux
  cp gnu-linux.orig/arm-eabi-extra.ver gnu-linux
)

cat gcc/limitx.h gcc/glimits.h gcc/limity.h \
 > $(dirname $(${TARGET}-gcc -print-libgcc-file-name))/include-fixed/limits.h

patch -Np0 -i ${PATCHDIR}/gcc/gcc-fomit-frame-pointer

rm -rf ../gcc-build
mkdir ../gcc-build
cd ../gcc-build

export gcc_cv_libc_provides_ssp=yes

CC="${TARGET}-${CC}" \
CXX="${TARGET}-${CXX}" \
AR="${TARGET}-ar" \
RANLIB="${TARGET}-ranlib" \
CPPFLAGS="-I/tools/include" \
../gcc/configure \
 --prefix=/tools \
 --libdir=/tools/lib \
 --libexecdir=/tools/lib \
 --with-local-prefix=/tools \
 --with-native-system-header-dir=/tools/include \
 --with-mpfr-include=$(pwd)/../gcc/mpfr/src \
 --with-mpfr-lib=$(pwd)/mpfr/src/.libs \
 --enable-clocale=generic \
 --enable-threads=posix \
 --enable-__cxa_atexit \
 --enable-languages=c,c++ \
 --disable-shared \
 --disable-libstdcxx-pch \
 --disable-libstdcxx-verbose \
 --disable-multilib \
 --disable-bootstrap \
 --disable-libsanitizer \
 --disable-libitm \
 --enable-libssp \
 --disable-libgomp \
 --disable-libmudflap \
 --disable-libquadmath \
 --disable-nls \
 --without-ppl \
 --without-cloog

make $jobs BOOT_LDFLAGS="-static" LDFLAGS="-static"
make install

# Remove libssp proper since we're using musl's implementation,
# but keep libssp_nonshared
rm -f /tools/lib/libssp.*

# Necessary symlink
ln -sf gcc /tools/bin/cc

# Remove the first-pass toolchain
find / tools -depth -name "*$TARGET*" | xargs rm -rf
